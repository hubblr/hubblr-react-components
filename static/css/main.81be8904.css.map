{"version":3,"file":"static/css/main.81be8904.css","mappings":"AAAA;;CAAA,85FCAA,g1F,CAAA,sD,ECEE,4BAIE,uEAMF,0IAoCE,6DAIA,iEAIA,sHAIA,kHApCA,qLAEE,kHAKF,qMAIA,kLAIA,6EArBA,wPAoDA,sHAtBA,yDAIA,6DAIA,kHAIA,8GApCA,iLAEE,8GAKF,iMAIA,8KAIA,yEArBA,oPA6DA,2NA7DA,sPA8BA,qEAIA,yEAIA,8HAIA,0HAiCF,2EA7CE,sDAIA,0DAIA,+GAIA,2GAoCA,+GAxEA,8KAEE,2GAKF,8LAIA,2KAIA,sEArBA,iPAoFF,qBACE,UAEE,oPAMJ","sources":["../node_modules/tailwindcss/base.css","../node_modules/tailwindcss/utilities.css","lib/form/styles/form.scss"],"sourcesContent":["@tailwind base;\n","@tailwind utilities;\n","/* styling for field labels */\n.form-label {\n  @apply font-bold;\n\n  /* gap before 'm-' is on purpose because 'form-label' contains 'm-' */\n  &:not([class*=\"mb-\"]):not([class*=\" m-\"]) {\n    @apply mb-3;\n  }\n}\n\n/* styling for validation error text */\n.validation-error {\n  @apply text-sm font-bold text-red-400;\n}\n\n/* mixin for colors based on state */\n@mixin invalid {\n  &.not-valid {\n    @apply text-red-400 border-red-400 bg-red-200;\n  }\n}\n\n@mixin state-colorings {\n  &.selected {\n    @apply border-blue-300 bg-blue-100;\n    .sub-description {\n      @apply text-gray-400;\n    }\n  }\n\n  &.is-valid:not(.error-only) {\n    @apply border-green-400 bg-green-100;\n  }\n\n  &.pressed {\n    @apply border-blue-700 bg-blue-200;\n  }\n\n  .sub-description {\n    @apply text-sm;\n  }\n\n  @include invalid;\n}\n\n/* base styles for form element wrappers */\n@mixin form-element-base {\n  &:not([class*=\"border-\"]) {\n    @apply border;\n  }\n\n  &:not([class*=\"rounded-\"]) {\n    @apply rounded-lg;\n  }\n\n  &:not([class^=\"p-\"]):not([class*=\":p-\"]):not([class*=\"px-\"]) {\n    @apply px-3;\n  }\n\n  &:not([class^=\"p-\"]):not([class*=\":p-\"]):not([class*=\"py-\"]) {\n    @apply py-4;\n  }\n}\n\n/* wrapper around (clickable) form elements WITHOUT text input, e.g., radio boxes */\n.form-element-wrapper {\n  @include form-element-base;\n  @include state-colorings;\n\n  &:not([class*=\"border-\"]) {\n    @apply border-gray-700;\n  }\n}\n\n.selector-wrapper {\n  @include form-element-base;\n  @include state-colorings;\n\n  &:not(.selected) {\n    @apply text-gray-700 border-gray-700 outline-none;\n  }\n}\n\n.error-only-wrapper {\n  @include invalid;\n  &.not-valid {\n    @include form-element-base;\n  }\n}\n\n/* wrapper around form elements WITH text input */\n.input-wrapper {\n  @include form-element-base;\n  @apply text-black;\n\n  &:not([class*=\"border-\"]) {\n    @apply border-gray-700;\n  }\n\n  /* styling based on different state, set by class */\n  @include state-colorings;\n\n  &:focus {\n    outline: 0;\n    &:not(.pressed) {\n      @apply text-black border-blue-500 bg-white;\n    }\n  }\n}\n\n.new {\n  @apply border-blue-200 text-red-500 text-sm;\n}\n"],"names":[],"sourceRoot":""}